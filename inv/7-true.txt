pcp: "PCP(Vector(Tile(1111,11), Tile(111,1110), Tile(0,111)))"
pcp: PCP { tiles: [Tile { up: "11", dn: "1111" }, Tile { up: "0111", dn: "111" }, Tile { up: "111", dn: "0" }] }
reversed: true
result: false
Result { assumptions: [Exact(ExactSequence { seq: "10", dir: DN }), MidExact(MidExactSequence { mid: "1111111", dir: DN }), MidWild(MidWildSequence { front: "1111", back: "0", dir: DN }), MidWild(MidWildSequence { front: "1", back: "00", dir: DN }), MidWild(MidWildSequence { front: "11", back: "01111", dir: DN }), MidWild(MidWildSequence { front: "1111", back: "111", dir: DN }), MidWild(MidWildSequence { front: "1", back: "1110", dir: DN }), MidExact(MidExactSequence { mid: "1111111", dir: DN }), MidExact(MidExactSequence { mid: "1111111", dir: DN }), MidExact(MidExactSequence { mid: "1111111", dir: DN }), Exact(ExactSequence { seq: "11", dir: DN }), Exact(ExactSequence { seq: "1111", dir: DN }), Exact(ExactSequence { seq: "111111", dir: DN }), Exact(ExactSequence { seq: "1110", dir: DN }), Exact(ExactSequence { seq: "00", dir: DN }), Exact(ExactSequence { seq: "101111", dir: DN }), MidExact(MidExactSequence { mid: "1111111", dir: DN }), MidWild(MidWildSequence { front: "1111", back: "0", dir: DN }), MidWild(MidWildSequence { front: "1", back: "00", dir: DN }), MidWild(MidWildSequence { front: "11", back: "01111", dir: DN })], result: true, start: Exact(ExactSequence { seq: "11", dir: DN }) }
