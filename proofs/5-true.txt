pcp: "PCP(Vector(Tile(1111,101), Tile(1101,1), Tile(1,1111)))"
reversed: true
result: true
Result { assumptions: [Exact(ExactSequence { seq: "011", dir: DN })], result: true, start: Exact(ExactSequence { seq: "011", dir: DN }) }
Result { assumptions: [MidWild(MidWildSequence { front: "0", back: "", dir: UP }), MidExact(MidExactSequence { mid: "0110", dir: UP }), MidExact(MidExactSequence { mid: "1111111111", dir: UP }), MidWild(MidWildSequence { front: "111111", back: "101", dir: UP }), MidWild(MidWildSequence { front: "11111", back: "1011111", dir: UP }), MidWild(MidWildSequence { front: "11110", back: "", dir: UP }), MidExact(MidExactSequence { mid: "01111110", dir: UP }), MidWild(MidWildSequence { front: "1110", back: "1111", dir: UP }), MidWild(MidWildSequence { front: "110", back: "11111111", dir: UP }), MidWild(MidWildSequence { front: "1111", back: "10111111111", dir: UP }), MidWild(MidWildSequence { front: "11111111", back: "1", dir: UP }), MidWild(MidWildSequence { front: "1111", back: "1101", dir: UP }), MidWild(MidWildSequence { front: "111", back: "11011111", dir: UP }), MidWild(MidWildSequence { front: "11", back: "110111111111", dir: UP }), MidWild(MidWildSequence { front: "1111111", back: "11111", dir: UP }), MidWild(MidWildSequence { front: "111", back: "11111101", dir: UP }), MidWild(MidWildSequence { front: "11", back: "111111011111", dir: UP }), MidWild(MidWildSequence { front: "1", back: "1111110111111111", dir: UP }), MidWild(MidWildSequence { front: "111111", back: "111111111", dir: UP }), Exact(ExactSequence { seq: "111", dir: UP }), Exact(ExactSequence { seq: "111111", dir: UP }), Exact(ExactSequence { seq: "11101", dir: UP }), Exact(ExactSequence { seq: "11011111", dir: UP }), Exact(ExactSequence { seq: "10111111111", dir: UP }), Exact(ExactSequence { seq: "11111111", dir: UP }), Exact(ExactSequence { seq: "1111101", dir: UP })], result: true, start: Exact(ExactSequence { seq: "111", dir: UP }) }
